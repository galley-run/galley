/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.JSONB
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.enums.ApiGatewayEngine
import run.galley.cloud.db.generated.tables.ProjectApiGateway
import run.galley.cloud.db.generated.tables.records.ProjectApiGatewayRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ProjectApiGatewayDao(configuration: Configuration?) : DAOImpl<ProjectApiGatewayRecord, run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway, UUID>(ProjectApiGateway.PROJECT_API_GATEWAY, run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway::class.java, configuration) {

    /**
     * Create a new ProjectApiGatewayDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway? = fetchOne(ProjectApiGateway.PROJECT_API_GATEWAY.ID, value)

    /**
     * Fetch records that have <code>vessel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.VESSEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_id IN (values)</code>
     */
    fun fetchByVesselId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.VESSEL_ID, *values)

    /**
     * Fetch records that have <code>charter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCharterId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.CHARTER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>charter_id IN (values)</code>
     */
    fun fetchByCharterId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.CHARTER_ID, *values)

    /**
     * Fetch records that have <code>project_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProjectId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.PROJECT_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    fun fetchByProjectId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.PROJECT_ID, *values)

    /**
     * Fetch a unique record that has <code>project_id = value</code>
     */
    fun fetchOneByProjectId(value: UUID): run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway? = fetchOne(ProjectApiGateway.PROJECT_API_GATEWAY.PROJECT_ID, value)

    /**
     * Fetch records that have <code>engine BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfEngine(lowerInclusive: ApiGatewayEngine?, upperInclusive: ApiGatewayEngine?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.ENGINE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>engine IN (values)</code>
     */
    fun fetchByEngine(vararg values: ApiGatewayEngine): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.ENGINE, *values)

    /**
     * Fetch records that have <code>configuration BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfConfiguration(lowerInclusive: JSONB?, upperInclusive: JSONB?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.CONFIGURATION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>configuration IN (values)</code>
     */
    fun fetchByConfiguration(vararg values: JSONB): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.CONFIGURATION, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.CREATED_AT, *values)

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUpdatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetchRange(ProjectApiGateway.PROJECT_API_GATEWAY.UPDATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    fun fetchByUpdatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.ProjectApiGateway> = fetch(ProjectApiGateway.PROJECT_API_GATEWAY.UPDATED_AT, *values)
}
