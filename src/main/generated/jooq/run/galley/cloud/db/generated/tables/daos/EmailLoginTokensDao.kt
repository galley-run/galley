/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.tables.EmailLoginTokens
import run.galley.cloud.db.generated.tables.records.EmailLoginTokensRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class EmailLoginTokensDao(configuration: Configuration?) : DAOImpl<EmailLoginTokensRecord, run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens, UUID>(EmailLoginTokens.EMAIL_LOGIN_TOKENS, run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens::class.java, configuration) {

    /**
     * Create a new EmailLoginTokensDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens? = fetchOne(EmailLoginTokens.EMAIL_LOGIN_TOKENS.ID, value)

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUserId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    fun fetchByUserId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USER_ID, *values)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun fetchRangeOfEmail(lowerInclusive: Any?, upperInclusive: Any?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EMAIL, lowerInclusive, upperInclusive)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun fetchByEmail(vararg values: Any): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EMAIL, *values)

    /**
     * Fetch records that have <code>token_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTokenHash(lowerInclusive: ByteArray?, upperInclusive: ByteArray?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.TOKEN_HASH, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>token_hash IN (values)</code>
     */
    fun fetchByTokenHash(vararg values: ByteArray): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.TOKEN_HASH, *values)

    /**
     * Fetch a unique record that has <code>token_hash = value</code>
     */
    fun fetchOneByTokenHash(value: ByteArray): run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens? = fetchOne(EmailLoginTokens.EMAIL_LOGIN_TOKENS.TOKEN_HASH, value)

    /**
     * Fetch records that have <code>purpose BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPurpose(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.PURPOSE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>purpose IN (values)</code>
     */
    fun fetchByPurpose(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.PURPOSE, *values)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun fetchRangeOfIp(lowerInclusive: Any?, upperInclusive: Any?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.IP, lowerInclusive, upperInclusive)
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    fun fetchByIp(vararg values: Any): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.IP, *values)

    /**
     * Fetch records that have <code>user_agent BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUserAgent(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USER_AGENT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>user_agent IN (values)</code>
     */
    fun fetchByUserAgent(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USER_AGENT, *values)

    /**
     * Fetch records that have <code>expires_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfExpiresAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EXPIRES_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>expires_at IN (values)</code>
     */
    fun fetchByExpiresAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EXPIRES_AT, *values)

    /**
     * Fetch records that have <code>used_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUsedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>used_at IN (values)</code>
     */
    fun fetchByUsedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USED_AT, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetchRange(EmailLoginTokens.EMAIL_LOGIN_TOKENS.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens> = fetch(EmailLoginTokens.EMAIL_LOGIN_TOKENS.CREATED_AT, *values)
}
