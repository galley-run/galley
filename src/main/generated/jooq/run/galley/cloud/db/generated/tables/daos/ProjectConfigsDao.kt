/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.tables.ProjectConfigs
import run.galley.cloud.db.generated.tables.records.ProjectConfigsRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ProjectConfigsDao(configuration: Configuration?) : DAOImpl<ProjectConfigsRecord, run.galley.cloud.db.generated.tables.pojos.ProjectConfigs, UUID>(ProjectConfigs.PROJECT_CONFIGS, run.galley.cloud.db.generated.tables.pojos.ProjectConfigs::class.java, configuration) {

    /**
     * Create a new ProjectConfigsDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.ProjectConfigs): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.ProjectConfigs? = fetchOne(ProjectConfigs.PROJECT_CONFIGS.ID, value)

    /**
     * Fetch records that have <code>vessel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.VESSEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_id IN (values)</code>
     */
    fun fetchByVesselId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.VESSEL_ID, *values)

    /**
     * Fetch records that have <code>charter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCharterId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.CHARTER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>charter_id IN (values)</code>
     */
    fun fetchByCharterId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.CHARTER_ID, *values)

    /**
     * Fetch records that have <code>project_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProjectId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.PROJECT_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    fun fetchByProjectId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.PROJECT_ID, *values)

    /**
     * Fetch records that have <code>crew_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCrewId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.CREW_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>crew_id IN (values)</code>
     */
    fun fetchByCrewId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.CREW_ID, *values)

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfKey(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.KEY, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    fun fetchByKey(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.KEY, *values)

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfValue(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.VALUE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    fun fetchByValue(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.VALUE, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.CREATED_AT, *values)

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUpdatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetchRange(ProjectConfigs.PROJECT_CONFIGS.UPDATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    fun fetchByUpdatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.ProjectConfigs> = fetch(ProjectConfigs.PROJECT_CONFIGS.UPDATED_AT, *values)
}
