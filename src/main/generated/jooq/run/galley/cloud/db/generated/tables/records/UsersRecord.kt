/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import run.galley.cloud.db.generated.tables.Users


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var email: Any?
        set(value): Unit = set(1, value)
        get(): Any? = get(1) as Any?

    open var firstName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var lastName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: UUID? = null, email: Any? = null, firstName: String? = null, lastName: String? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.email = email
        this.firstName = firstName
        this.lastName = lastName
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(value: run.galley.cloud.db.generated.tables.pojos.Users?): this() {
        if (value != null) {
            this.id = value.id
            this.email = value.email
            this.firstName = value.firstName
            this.lastName = value.lastName
            this.createdAt = value.createdAt
            resetTouchedOnNotNull()
        }
    }
}
