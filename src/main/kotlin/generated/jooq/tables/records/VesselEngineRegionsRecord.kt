/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records

import generated.jooq.enums.GeoRegion
import generated.jooq.tables.VesselEngineRegions
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.OffsetDateTime
import java.util.UUID

/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class VesselEngineRegionsRecord() : UpdatableRecordImpl<VesselEngineRegionsRecord>(VesselEngineRegions.VESSEL_ENGINE_REGIONS) {
  open var id: UUID?
    set(value): Unit = set(0, value)
    get(): UUID? = get(0) as UUID?

  open var vesselId: UUID?
    set(value): Unit = set(1, value)
    get(): UUID? = get(1) as UUID?

  open var vesselEngineId: UUID?
    set(value): Unit = set(2, value)
    get(): UUID? = get(2) as UUID?

  open var name: String?
    set(value): Unit = set(3, value)
    get(): String? = get(3) as String?

  open var providerName: String?
    set(value): Unit = set(4, value)
    get(): String? = get(4) as String?

  open var geoRegion: GeoRegion?
    set(value): Unit = set(5, value)
    get(): GeoRegion? = get(5) as GeoRegion?

  open var location: String?
    set(value): Unit = set(6, value)
    get(): String? = get(6) as String?

  open var createdAt: OffsetDateTime?
    set(value): Unit = set(7, value)
    get(): OffsetDateTime? = get(7) as OffsetDateTime?

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

  /**
   * Create a detached, initialised VesselEngineRegionsRecord
   */
  constructor(
    id: UUID? = null,
    vesselId: UUID? = null,
    vesselEngineId: UUID? = null,
    name: String? = null,
    providerName: String? = null,
    geoRegion: GeoRegion? = null,
    location: String? = null,
    createdAt: OffsetDateTime? = null,
  ) : this() {
    this.id = id
    this.vesselId = vesselId
    this.vesselEngineId = vesselEngineId
    this.name = name
    this.providerName = providerName
    this.geoRegion = geoRegion
    this.location = location
    this.createdAt = createdAt
    resetTouchedOnNotNull()
  }

  /**
   * Create a detached, initialised VesselEngineRegionsRecord
   */
  constructor(value: generated.jooq.tables.pojos.VesselEngineRegions?) : this() {
    if (value != null) {
      this.id = value.id
      this.vesselId = value.vesselId
      this.vesselEngineId = value.vesselEngineId
      this.name = value.name
      this.providerName = value.providerName
      this.geoRegion = value.geoRegion
      this.location = value.location
      this.createdAt = value.createdAt
      resetTouchedOnNotNull()
    }
  }
}
