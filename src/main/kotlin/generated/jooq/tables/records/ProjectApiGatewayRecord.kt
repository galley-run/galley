/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.enums.ApiGatewayEngine
import generated.jooq.tables.ProjectApiGateway

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ProjectApiGatewayRecord() : UpdatableRecordImpl<ProjectApiGatewayRecord>(ProjectApiGateway.PROJECT_API_GATEWAY) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var vesselId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var charterId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var projectId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var engine: ApiGatewayEngine?
        set(value): Unit = set(4, value)
        get(): ApiGatewayEngine? = get(4) as ApiGatewayEngine?

    open var configuration: JSONB?
        set(value): Unit = set(5, value)
        get(): JSONB? = get(5) as JSONB?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised ProjectApiGatewayRecord
     */
    constructor(id: UUID? = null, vesselId: UUID? = null, charterId: UUID? = null, projectId: UUID? = null, engine: ApiGatewayEngine? = null, configuration: JSONB? = null, createdAt: OffsetDateTime? = null, updatedAt: OffsetDateTime? = null): this() {
        this.id = id
        this.vesselId = vesselId
        this.charterId = charterId
        this.projectId = projectId
        this.engine = engine
        this.configuration = configuration
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised ProjectApiGatewayRecord
     */
    constructor(value: generated.jooq.tables.pojos.ProjectApiGateway?): this() {
        if (value != null) {
            this.id = value.id
            this.vesselId = value.vesselId
            this.charterId = value.charterId
            this.projectId = value.projectId
            this.engine = value.engine
            this.configuration = value.configuration
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            resetTouchedOnNotNull()
        }
    }
}
