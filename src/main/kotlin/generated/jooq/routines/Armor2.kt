/*
 * This file is generated by jOOQ.
 */
package generated.jooq.routines


import generated.jooq.Public

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class Armor2 : AbstractRoutine<String>("armor", Public.PUBLIC, DSL.comment(""), SQLDataType.CLOB) {
    companion object {

        /**
         * The parameter <code>public.armor.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<String?> = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>public.armor._1</code>.
         */
        val _1: Parameter<ByteArray?> = Internal.createParameter("_1", SQLDataType.BLOB, false, true)

        /**
         * The parameter <code>public.armor._2</code>.
         */
        val _2: Parameter<Array<String?>?> = Internal.createParameter("_2", SQLDataType.CLOB.array(), false, true)

        /**
         * The parameter <code>public.armor._3</code>.
         */
        val _3: Parameter<Array<String?>?> = Internal.createParameter("_3", SQLDataType.CLOB.array(), false, true)
    }

    init {
        returnParameter = Armor2.RETURN_VALUE
        addInParameter(Armor2._1)
        addInParameter(Armor2._2)
        addInParameter(Armor2._3)
        setOverloaded(true)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: ByteArray?): Unit = setValue(Armor2._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<ByteArray?>): Unit {
        setField(Armor2._1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: Array<String?>?): Unit = setValue(Armor2._2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<Array<String?>?>): Unit {
        setField(Armor2._2, field)
    }

    /**
     * Set the <code>_3</code> parameter IN value to the routine
     */
    fun set__3(value: Array<String?>?): Unit = setValue(Armor2._3, value)

    /**
     * Set the <code>_3</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__3(field: Field<Array<String?>?>): Unit {
        setField(Armor2._3, field)
    }
}
