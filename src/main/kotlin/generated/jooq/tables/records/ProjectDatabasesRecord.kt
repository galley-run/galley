/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records

import generated.jooq.tables.ProjectDatabases
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.OffsetDateTime
import java.util.UUID

/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ProjectDatabasesRecord() : UpdatableRecordImpl<ProjectDatabasesRecord>(ProjectDatabases.PROJECT_DATABASES) {
  open var id: UUID?
    set(value): Unit = set(0, value)
    get(): UUID? = get(0) as UUID?

  open var vesselId: UUID?
    set(value): Unit = set(1, value)
    get(): UUID? = get(1) as UUID?

  open var charterId: UUID?
    set(value): Unit = set(2, value)
    get(): UUID? = get(2) as UUID?

  open var projectId: UUID?
    set(value): Unit = set(3, value)
    get(): UUID? = get(3) as UUID?

  open var engine: String?
    set(value): Unit = set(4, value)
    get(): String? = get(4) as String?

  open var plan: String?
    set(value): Unit = set(5, value)
    get(): String? = get(5) as String?

  open var createdAt: OffsetDateTime?
    set(value): Unit = set(6, value)
    get(): OffsetDateTime? = get(6) as OffsetDateTime?

  open var deletedAt: OffsetDateTime?
    set(value): Unit = set(7, value)
    get(): OffsetDateTime? = get(7) as OffsetDateTime?

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

  /**
   * Create a detached, initialised ProjectDatabasesRecord
   */
  constructor(
    id: UUID? = null,
    vesselId: UUID? = null,
    charterId: UUID? = null,
    projectId: UUID? = null,
    engine: String? = null,
    plan: String? = null,
    createdAt: OffsetDateTime? = null,
    deletedAt: OffsetDateTime? = null,
  ) : this() {
    this.id = id
    this.vesselId = vesselId
    this.charterId = charterId
    this.projectId = projectId
    this.engine = engine
    this.plan = plan
    this.createdAt = createdAt
    this.deletedAt = deletedAt
    resetTouchedOnNotNull()
  }

  /**
   * Create a detached, initialised ProjectDatabasesRecord
   */
  constructor(value: generated.jooq.tables.pojos.ProjectDatabases?) : this() {
    if (value != null) {
      this.id = value.id
      this.vesselId = value.vesselId
      this.charterId = value.charterId
      this.projectId = value.projectId
      this.engine = value.engine
      this.plan = value.plan
      this.createdAt = value.createdAt
      this.deletedAt = value.deletedAt
      resetTouchedOnNotNull()
    }
  }
}
