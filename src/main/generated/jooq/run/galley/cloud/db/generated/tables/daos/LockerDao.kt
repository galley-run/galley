/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.tables.Locker
import run.galley.cloud.db.generated.tables.records.LockerRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class LockerDao(configuration: Configuration?) : DAOImpl<LockerRecord, run.galley.cloud.db.generated.tables.pojos.Locker, UUID>(Locker.LOCKER, run.galley.cloud.db.generated.tables.pojos.Locker::class.java, configuration) {

    /**
     * Create a new LockerDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.Locker): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.Locker? = fetchOne(Locker.LOCKER.ID, value)

    /**
     * Fetch records that have <code>vessel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.VESSEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_id IN (values)</code>
     */
    fun fetchByVesselId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.VESSEL_ID, *values)

    /**
     * Fetch records that have <code>crew_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCrewId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.CREW_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>crew_id IN (values)</code>
     */
    fun fetchByCrewId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.CREW_ID, *values)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.NAME, *values)

    /**
     * Fetch records that have <code>vault_mount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVaultMount(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.VAULT_MOUNT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vault_mount IN (values)</code>
     */
    fun fetchByVaultMount(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.VAULT_MOUNT, *values)

    /**
     * Fetch records that have <code>vault_path BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVaultPath(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.VAULT_PATH, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vault_path IN (values)</code>
     */
    fun fetchByVaultPath(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.VAULT_PATH, *values)

    /**
     * Fetch records that have <code>kv_version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfKvVersion(lowerInclusive: Int?, upperInclusive: Int?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.KV_VERSION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>kv_version IN (values)</code>
     */
    fun fetchByKvVersion(vararg values: Int): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.KV_VERSION, *values.toTypedArray())

    /**
     * Fetch records that have <code>key_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfKeyId(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.KEY_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>key_id IN (values)</code>
     */
    fun fetchByKeyId(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.KEY_ID, *values)

    /**
     * Fetch records that have <code>fingerprint BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfFingerprint(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.FINGERPRINT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>fingerprint IN (values)</code>
     */
    fun fetchByFingerprint(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.FINGERPRINT, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.CREATED_AT, *values)

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUpdatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.UPDATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    fun fetchByUpdatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.UPDATED_AT, *values)

    /**
     * Fetch records that have <code>expires_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfExpiresAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetchRange(Locker.LOCKER.EXPIRES_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>expires_at IN (values)</code>
     */
    fun fetchByExpiresAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.Locker> = fetch(Locker.LOCKER.EXPIRES_AT, *values)
}
