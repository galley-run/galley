/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import run.galley.cloud.db.generated.tables.EmailLoginTokens


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class EmailLoginTokensRecord() : UpdatableRecordImpl<EmailLoginTokensRecord>(EmailLoginTokens.EMAIL_LOGIN_TOKENS) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var userId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var email: Any?
        set(value): Unit = set(2, value)
        get(): Any? = get(2) as Any?

    open var tokenHash: ByteArray?
        set(value): Unit = set(3, value)
        get(): ByteArray? = get(3) as ByteArray?

    open var purpose: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var ip: Any?
        set(value): Unit = set(5, value)
        get(): Any? = get(5) as Any?

    open var userAgent: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var expiresAt: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    open var usedAt: OffsetDateTime?
        set(value): Unit = set(8, value)
        get(): OffsetDateTime? = get(8) as OffsetDateTime?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised EmailLoginTokensRecord
     */
    constructor(id: UUID? = null, userId: UUID? = null, email: Any? = null, tokenHash: ByteArray? = null, purpose: String? = null, ip: Any? = null, userAgent: String? = null, expiresAt: OffsetDateTime? = null, usedAt: OffsetDateTime? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.userId = userId
        this.email = email
        this.tokenHash = tokenHash
        this.purpose = purpose
        this.ip = ip
        this.userAgent = userAgent
        this.expiresAt = expiresAt
        this.usedAt = usedAt
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised EmailLoginTokensRecord
     */
    constructor(value: run.galley.cloud.db.generated.tables.pojos.EmailLoginTokens?): this() {
        if (value != null) {
            this.id = value.id
            this.userId = value.userId
            this.email = value.email
            this.tokenHash = value.tokenHash
            this.purpose = value.purpose
            this.ip = value.ip
            this.userAgent = value.userAgent
            this.expiresAt = value.expiresAt
            this.usedAt = value.usedAt
            this.createdAt = value.createdAt
            resetTouchedOnNotNull()
        }
    }
}
