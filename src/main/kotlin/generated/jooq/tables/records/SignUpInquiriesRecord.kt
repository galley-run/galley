/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.enums.SignUpIntent
import generated.jooq.enums.TechnicalExperience
import generated.jooq.tables.SignUpInquiries

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class SignUpInquiriesRecord() : UpdatableRecordImpl<SignUpInquiriesRecord>(SignUpInquiries.SIGN_UP_INQUIRIES) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var vesselId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var userId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var intent: SignUpIntent?
        set(value): Unit = set(3, value)
        get(): SignUpIntent? = get(3) as SignUpIntent?

    open var technicalExperience: TechnicalExperience?
        set(value): Unit = set(4, value)
        get(): TechnicalExperience? = get(4) as TechnicalExperience?

    open var questions: JSONB?
        set(value): Unit = set(5, value)
        get(): JSONB? = get(5) as JSONB?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised SignUpInquiriesRecord
     */
    constructor(id: UUID? = null, vesselId: UUID? = null, userId: UUID? = null, intent: SignUpIntent? = null, technicalExperience: TechnicalExperience? = null, questions: JSONB? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.vesselId = vesselId
        this.userId = userId
        this.intent = intent
        this.technicalExperience = technicalExperience
        this.questions = questions
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised SignUpInquiriesRecord
     */
    constructor(value: generated.jooq.tables.pojos.SignUpInquiries?): this() {
        if (value != null) {
            this.id = value.id
            this.vesselId = value.vesselId
            this.userId = value.userId
            this.intent = value.intent
            this.technicalExperience = value.technicalExperience
            this.questions = value.questions
            this.createdAt = value.createdAt
            resetTouchedOnNotNull()
        }
    }
}
