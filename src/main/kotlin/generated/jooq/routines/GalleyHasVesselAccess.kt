/*
 * This file is generated by jOOQ.
 */
package generated.jooq.routines


import generated.jooq.Public

import java.util.UUID

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class GalleyHasVesselAccess : AbstractRoutine<Boolean>("galley_has_vessel_access", Public.PUBLIC, DSL.comment(""), SQLDataType.BOOLEAN) {
    companion object {

        /**
         * The parameter
         * <code>public.galley_has_vessel_access.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Boolean?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BOOLEAN, false, false)

        /**
         * The parameter
         * <code>public.galley_has_vessel_access._vessel_id</code>.
         */
        val _VESSEL_ID: Parameter<UUID?> = Internal.createParameter("_vessel_id", SQLDataType.UUID, false, false)
    }

    init {
        returnParameter = GalleyHasVesselAccess.RETURN_VALUE
        addInParameter(GalleyHasVesselAccess._VESSEL_ID)
    }

    /**
     * Set the <code>_vessel_id</code> parameter IN value to the routine
     */
    fun set_VesselId(value: UUID?): Unit = setValue(GalleyHasVesselAccess._VESSEL_ID, value)

    /**
     * Set the <code>_vessel_id</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun set_VesselId(field: Field<UUID?>): Unit {
        setField(GalleyHasVesselAccess._VESSEL_ID, field)
    }
}
