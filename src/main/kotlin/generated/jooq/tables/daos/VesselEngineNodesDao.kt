/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.daos


import generated.jooq.enums.NodeDeployMode
import generated.jooq.enums.NodeType
import generated.jooq.tables.VesselEngineNodes
import generated.jooq.tables.records.VesselEngineNodesRecord

import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class VesselEngineNodesDao(configuration: Configuration?) : DAOImpl<VesselEngineNodesRecord, generated.jooq.tables.pojos.VesselEngineNodes, UUID>(VesselEngineNodes.VESSEL_ENGINE_NODES, generated.jooq.tables.pojos.VesselEngineNodes::class.java, configuration) {

    /**
     * Create a new VesselEngineNodesDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: generated.jooq.tables.pojos.VesselEngineNodes): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): generated.jooq.tables.pojos.VesselEngineNodes? = fetchOne(VesselEngineNodes.VESSEL_ENGINE_NODES.ID, value)

    /**
     * Fetch records that have <code>vessel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_id IN (values)</code>
     */
    fun fetchByVesselId(vararg values: UUID): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ID, *values)

    /**
     * Fetch records that have <code>vessel_engine_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselEngineId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_engine_id IN (values)</code>
     */
    fun fetchByVesselEngineId(vararg values: UUID): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_ID, *values)

    /**
     * Fetch records that have <code>vessel_engine_region_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfVesselEngineRegionId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_REGION_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_engine_region_id IN (values)</code>
     */
    fun fetchByVesselEngineRegionId(vararg values: UUID): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_REGION_ID, *values)

    /**
     * Fetch records that have <code>node_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfNodeType(lowerInclusive: NodeType?, upperInclusive: NodeType?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.NODE_TYPE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>node_type IN (values)</code>
     */
    fun fetchByNodeType(vararg values: NodeType): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.NODE_TYPE, *values)

    /**
     * Fetch records that have <code>deploy_mode BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDeployMode(lowerInclusive: NodeDeployMode?, upperInclusive: NodeDeployMode?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.DEPLOY_MODE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>deploy_mode IN (values)</code>
     */
    fun fetchByDeployMode(vararg values: NodeDeployMode): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.DEPLOY_MODE, *values)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.NAME, *values)

    /**
     * Fetch records that have <code>ip_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfIpAddress(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.IP_ADDRESS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>ip_address IN (values)</code>
     */
    fun fetchByIpAddress(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.IP_ADDRESS, *values)

    /**
     * Fetch records that have <code>cpu BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCpu(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.CPU, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>cpu IN (values)</code>
     */
    fun fetchByCpu(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.CPU, *values)

    /**
     * Fetch records that have <code>memory BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMemory(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.MEMORY, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>memory IN (values)</code>
     */
    fun fetchByMemory(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.MEMORY, *values)

    /**
     * Fetch records that have <code>storage BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfStorage(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.STORAGE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>storage IN (values)</code>
     */
    fun fetchByStorage(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.STORAGE, *values)

    /**
     * Fetch records that have <code>provisioning BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProvisioning(lowerInclusive: Boolean?, upperInclusive: Boolean?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>provisioning IN (values)</code>
     */
    fun fetchByProvisioning(vararg values: Boolean): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING, *values.toTypedArray())

    /**
     * Fetch records that have <code>provisioning_locker_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfProvisioningLockerId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_LOCKER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>provisioning_locker_id IN (values)</code>
     */
    fun fetchByProvisioningLockerId(vararg values: UUID): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_LOCKER_ID, *values)

    /**
     * Fetch records that have <code>provisioning_security_updates BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfProvisioningSecurityUpdates(lowerInclusive: Boolean?, upperInclusive: Boolean?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_SECURITY_UPDATES, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>provisioning_security_updates IN
     * (values)</code>
     */
    fun fetchByProvisioningSecurityUpdates(vararg values: Boolean): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_SECURITY_UPDATES, *values.toTypedArray())

    /**
     * Fetch records that have <code>provisioning_security_updates_schedule
     * BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfProvisioningSecurityUpdatesSchedule(lowerInclusive: String?, upperInclusive: String?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_SECURITY_UPDATES_SCHEDULE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>provisioning_security_updates_schedule IN
     * (values)</code>
     */
    fun fetchByProvisioningSecurityUpdatesSchedule(vararg values: String): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING_SECURITY_UPDATES_SCHEDULE, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetchRange(VesselEngineNodes.VESSEL_ENGINE_NODES.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<generated.jooq.tables.pojos.VesselEngineNodes> = fetch(VesselEngineNodes.VESSEL_ENGINE_NODES.CREATED_AT, *values)
}
