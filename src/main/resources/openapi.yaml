openapi: 3.1.0
info:
  title: Galley API
  version: 0.1.0
  description: The main Galley API spec where the Galley UI will be built upon
  license:
    name: Business Source License
    identifier: BUSL-1.1
servers:
  - url: https://api.galley.run
    description: Hosted Platform - Production
tags:
  - description: Manage vessel
    name: vessel
  - description: Manage the vessel engine
    name: vessel/engine
  - description: Manage vessel billing profile
    name: vessel/billing-profile
  - description: Manage vessel logbook
    name: vessel/logbook
  - description: Manage the vessel's SSH keys and other secrets shared accross tenants
    name: vessel/locker
  - description: Managing the crew of the vessel
    name: vessel/crew
  - description: Manage charters within a vessel
    name: charter
  - description: Manage charter billing profile
    name: charter/billing-profile
  - description: Manage charter logbook
    name: charter/logbook
  - description: Managing the crew of the charter
    name: charter/crew
  - description: Manage projects within a charter
    name: project
  - description: Manage applications within a project
    name: project/applications
  - description: Manage databases within a project
    name: project/databases
  - description: Manage secrets within a project
    name: project/secrets
  - description: Manage configs within a project
    name: project/configs
  - description: Manage API Gateway within a project
    name: project/api-gateway
  - description: Current user profile
    name: users/me
  - description: Manage API keys for the current user
    name: users/me/api-keys
  - description: Manage WebAuthn credentials for the current user
    name: users/me/webauthn
  - description: Authentication endpoints
    name: auth
  - description: The Chef AI Agent which can guide you through Galley and can give you recommendations specific to your needs on Vessel scope
    name: chef
components:
  securitySchemes:
    vesselCaptain:
      type: http
      scheme: bearer
      description: Role Vessel Captain Acts as Charter Captain and is able to manage anything above the charter level.
      bearerFormat: JWT
      x-vessel-role: captain
    charterCaptain:
      type: http
      scheme: bearer
      description: Role Charter Captain Consider this role the Charter Admin, may do and see all project, charter and vessel related stuff where the charter is part of.
      bearerFormat: JWT
      x-vessel-role: member
      x-charter-role: captain
    charterPurser:
      type: http
      scheme: bearer
      description: Role Charter Purser May access charter billing and crew management but only view projects details
      bearerFormat: JWT
      x-vessel-role: member
      x-charter-role: purser
    charterBoatswain:
      type: http
      scheme: bearer
      description: Role Charter Boatswain May do and see all project related stuff
      bearerFormat: JWT
      x-vessel-role: member
      x-charter-role: boatswain
    charterDeckhand:
      type: http
      scheme: bearer
      description: Role Charter Deckhand May deploy but can not view secrets or project settings.
      bearerFormat: JWT
      x-vessel-role: member
      x-charter-role: deckhand
    charterSteward:
      type: http
      scheme: bearer
      description: Role Charter Steward This is a supporting role, may only view and monitor deploys.
      bearerFormat: JWT
      x-vessel-role: member
      x-charter-role: steward
