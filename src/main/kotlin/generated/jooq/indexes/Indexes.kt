@file:Suppress("warnings")
/*
 * This file is generated by jOOQ.
 */
package generated.jooq.indexes


import generated.jooq.tables.ApiKeys
import generated.jooq.tables.CharterBillingProfile
import generated.jooq.tables.CharterProjects
import generated.jooq.tables.Charters
import generated.jooq.tables.Crew
import generated.jooq.tables.CrewCharterMember
import generated.jooq.tables.EmailLoginTokens
import generated.jooq.tables.FlywaySchemaHistory
import generated.jooq.tables.Locker
import generated.jooq.tables.Logbook
import generated.jooq.tables.MvLogbookRecent
import generated.jooq.tables.MvOutboxReady
import generated.jooq.tables.OutboxEvents
import generated.jooq.tables.ProjectApiGateway
import generated.jooq.tables.ProjectApplications
import generated.jooq.tables.ProjectConfigs
import generated.jooq.tables.ProjectDatabases
import generated.jooq.tables.ProjectSecrets
import generated.jooq.tables.Sessions
import generated.jooq.tables.SignUpInquiries
import generated.jooq.tables.UserIdentities
import generated.jooq.tables.Users
import generated.jooq.tables.VesselEngineNodes
import generated.jooq.tables.VesselEngineRegions
import generated.jooq.tables.VesselEngines
import generated.jooq.tables.Vessels
import generated.jooq.tables.WebauthnCredentials
import generated.jooq.tables.WebhookDeliveries
import generated.jooq.tables.WebhookSubscriptions

import org.jooq.Index
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// INDEX definitions
// -------------------------------------------------------------------------

val FLYWAY_SCHEMA_HISTORY_S_IDX: Index = Internal.createIndex(DSL.name("flyway_schema_history_s_idx"), FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, arrayOf(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS), false)
val IDX_API_GW_CONFIGURATION_GIN: Index = Internal.createIndex(DSL.name("idx_api_gw_configuration_gin"), ProjectApiGateway.PROJECT_API_GATEWAY, arrayOf(ProjectApiGateway.PROJECT_API_GATEWAY.CONFIGURATION), false)
val IDX_API_GW_UPDATED: Index = Internal.createIndex(DSL.name("idx_api_gw_updated"), ProjectApiGateway.PROJECT_API_GATEWAY, arrayOf(ProjectApiGateway.PROJECT_API_GATEWAY.UPDATED_AT), false)
val IDX_API_KEYS_LAST_USED: Index = Internal.createIndex(DSL.name("idx_api_keys_last_used"), ApiKeys.API_KEYS, arrayOf(ApiKeys.API_KEYS.LAST_USED_AT), false)
val IDX_API_KEYS_USER_STATUS: Index = Internal.createIndex(DSL.name("idx_api_keys_user_status"), ApiKeys.API_KEYS, arrayOf(ApiKeys.API_KEYS.USER_ID, ApiKeys.API_KEYS.STATUS), false)
val IDX_APP_CHARTER: Index = Internal.createIndex(DSL.name("idx_app_charter"), ProjectApplications.PROJECT_APPLICATIONS, arrayOf(ProjectApplications.PROJECT_APPLICATIONS.CHARTER_ID), false)
val IDX_APP_DELETED: Index = Internal.createIndex(DSL.name("idx_app_deleted"), ProjectApplications.PROJECT_APPLICATIONS, arrayOf(ProjectApplications.PROJECT_APPLICATIONS.DELETED_AT), false)
val IDX_APP_PROJECT: Index = Internal.createIndex(DSL.name("idx_app_project"), ProjectApplications.PROJECT_APPLICATIONS, arrayOf(ProjectApplications.PROJECT_APPLICATIONS.PROJECT_ID), false)
val IDX_APP_VESSEL: Index = Internal.createIndex(DSL.name("idx_app_vessel"), ProjectApplications.PROJECT_APPLICATIONS, arrayOf(ProjectApplications.PROJECT_APPLICATIONS.VESSEL_ID), false)
val IDX_CCM_CHARTER: Index = Internal.createIndex(DSL.name("idx_ccm_charter"), CrewCharterMember.CREW_CHARTER_MEMBER, arrayOf(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ID), false)
val IDX_CCM_CHARTER_ROLE: Index = Internal.createIndex(DSL.name("idx_ccm_charter_role"), CrewCharterMember.CREW_CHARTER_MEMBER, arrayOf(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ID, CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ROLE), false)
val IDX_CCM_CREW: Index = Internal.createIndex(DSL.name("idx_ccm_crew"), CrewCharterMember.CREW_CHARTER_MEMBER, arrayOf(CrewCharterMember.CREW_CHARTER_MEMBER.CREW_ID), false)
val IDX_CHARTER_BILLING_VESSEL: Index = Internal.createIndex(DSL.name("idx_charter_billing_vessel"), CharterBillingProfile.CHARTER_BILLING_PROFILE, arrayOf(CharterBillingProfile.CHARTER_BILLING_PROFILE.VESSEL_ID), false)
val IDX_CHARTER_PROJECTS_VESSEL_ID: Index = Internal.createIndex(DSL.name("idx_charter_projects_vessel_id"), CharterProjects.CHARTER_PROJECTS, arrayOf(CharterProjects.CHARTER_PROJECTS.VESSEL_ID), false)
val IDX_CHARTERS_DELETED_AT: Index = Internal.createIndex(DSL.name("idx_charters_deleted_at"), Charters.CHARTERS, arrayOf(Charters.CHARTERS.DELETED_AT), false)
val IDX_CHARTERS_VESSEL: Index = Internal.createIndex(DSL.name("idx_charters_vessel"), Charters.CHARTERS, arrayOf(Charters.CHARTERS.VESSEL_ID), false)
val IDX_CHARTERS_VESSEL_CREATED: Index = Internal.createIndex(DSL.name("idx_charters_vessel_created"), Charters.CHARTERS, arrayOf(Charters.CHARTERS.VESSEL_ID, Charters.CHARTERS.CREATED_AT), false)
val IDX_CONFIGS_CHARTER: Index = Internal.createIndex(DSL.name("idx_configs_charter"), ProjectConfigs.PROJECT_CONFIGS, arrayOf(ProjectConfigs.PROJECT_CONFIGS.CHARTER_ID), false)
val IDX_CONFIGS_PROJECT: Index = Internal.createIndex(DSL.name("idx_configs_project"), ProjectConfigs.PROJECT_CONFIGS, arrayOf(ProjectConfigs.PROJECT_CONFIGS.PROJECT_ID), false)
val IDX_CONFIGS_VESSEL: Index = Internal.createIndex(DSL.name("idx_configs_vessel"), ProjectConfigs.PROJECT_CONFIGS, arrayOf(ProjectConfigs.PROJECT_CONFIGS.VESSEL_ID), false)
val IDX_CREW_ACTIVE: Index = Internal.createIndex(DSL.name("idx_crew_active"), Crew.CREW, arrayOf(Crew.CREW.VESSEL_ID), false)
val IDX_CREW_STATUS: Index = Internal.createIndex(DSL.name("idx_crew_status"), Crew.CREW, arrayOf(Crew.CREW.STATUS), false)
val IDX_CREW_USER: Index = Internal.createIndex(DSL.name("idx_crew_user"), Crew.CREW, arrayOf(Crew.CREW.USER_ID), false)
val IDX_CREW_VESSEL: Index = Internal.createIndex(DSL.name("idx_crew_vessel"), Crew.CREW, arrayOf(Crew.CREW.VESSEL_ID), false)
val IDX_DB_CHARTER: Index = Internal.createIndex(DSL.name("idx_db_charter"), ProjectDatabases.PROJECT_DATABASES, arrayOf(ProjectDatabases.PROJECT_DATABASES.CHARTER_ID), false)
val IDX_DB_ENGINE_PLAN: Index = Internal.createIndex(DSL.name("idx_db_engine_plan"), ProjectDatabases.PROJECT_DATABASES, arrayOf(ProjectDatabases.PROJECT_DATABASES.ENGINE, ProjectDatabases.PROJECT_DATABASES.PLAN), false)
val IDX_DB_PROJECT: Index = Internal.createIndex(DSL.name("idx_db_project"), ProjectDatabases.PROJECT_DATABASES, arrayOf(ProjectDatabases.PROJECT_DATABASES.PROJECT_ID), false)
val IDX_DB_VESSEL: Index = Internal.createIndex(DSL.name("idx_db_vessel"), ProjectDatabases.PROJECT_DATABASES, arrayOf(ProjectDatabases.PROJECT_DATABASES.VESSEL_ID), false)
val IDX_EMAIL_LOGIN_TOKENS_ACTIVE: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_active"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EMAIL, EmailLoginTokens.EMAIL_LOGIN_TOKENS.PURPOSE), false)
val IDX_EMAIL_LOGIN_TOKENS_EMAIL: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_email"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EMAIL), false)
val IDX_EMAIL_LOGIN_TOKENS_EXPIRES: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_expires"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EXPIRES_AT), false)
val IDX_EMAIL_LOGIN_TOKENS_LOOKUP: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_lookup"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.EMAIL, EmailLoginTokens.EMAIL_LOGIN_TOKENS.PURPOSE, EmailLoginTokens.EMAIL_LOGIN_TOKENS.EXPIRES_AT), false)
val IDX_EMAIL_LOGIN_TOKENS_USED: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_used"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USED_AT), false)
val IDX_EMAIL_LOGIN_TOKENS_USER: Index = Internal.createIndex(DSL.name("idx_email_login_tokens_user"), EmailLoginTokens.EMAIL_LOGIN_TOKENS, arrayOf(EmailLoginTokens.EMAIL_LOGIN_TOKENS.USER_ID), false)
val IDX_ENGINES_VESSEL: Index = Internal.createIndex(DSL.name("idx_engines_vessel"), VesselEngines.VESSEL_ENGINES, arrayOf(VesselEngines.VESSEL_ENGINES.VESSEL_ID), false)
val IDX_LOCKER_CREW: Index = Internal.createIndex(DSL.name("idx_locker_crew"), Locker.LOCKER, arrayOf(Locker.LOCKER.CREW_ID), false)
val IDX_LOCKER_VESSEL: Index = Internal.createIndex(DSL.name("idx_locker_vessel"), Locker.LOCKER, arrayOf(Locker.LOCKER.VESSEL_ID), false)
val IDX_LOGBOOK_CHARTER_TIME: Index = Internal.createIndex(DSL.name("idx_logbook_charter_time"), Logbook.LOGBOOK, arrayOf(Logbook.LOGBOOK.CHARTER_ID, Logbook.LOGBOOK.CREATED_AT), false)
val IDX_LOGBOOK_DETAILS_GIN: Index = Internal.createIndex(DSL.name("idx_logbook_details_gin"), Logbook.LOGBOOK, arrayOf(Logbook.LOGBOOK.DETAILS), false)
val IDX_LOGBOOK_OBJECT_TIME: Index = Internal.createIndex(DSL.name("idx_logbook_object_time"), Logbook.LOGBOOK, arrayOf(Logbook.LOGBOOK.OBJECT_TYPE, Logbook.LOGBOOK.OBJECT_ID, Logbook.LOGBOOK.CREATED_AT), false)
val IDX_LOGBOOK_USER_TIME: Index = Internal.createIndex(DSL.name("idx_logbook_user_time"), Logbook.LOGBOOK, arrayOf(Logbook.LOGBOOK.USER_ID, Logbook.LOGBOOK.CREATED_AT), false)
val IDX_LOGBOOK_VESSEL_TIME: Index = Internal.createIndex(DSL.name("idx_logbook_vessel_time"), Logbook.LOGBOOK, arrayOf(Logbook.LOGBOOK.VESSEL_ID, Logbook.LOGBOOK.CREATED_AT), false)
val IDX_MV_LOGBOOK_RECENT_CREATED: Index = Internal.createIndex(DSL.name("idx_mv_logbook_recent_created"), MvLogbookRecent.MV_LOGBOOK_RECENT, arrayOf(MvLogbookRecent.MV_LOGBOOK_RECENT.CREATED_AT), false)
val IDX_MV_OUTBOX_READY_NEXT: Index = Internal.createIndex(DSL.name("idx_mv_outbox_ready_next"), MvOutboxReady.MV_OUTBOX_READY, arrayOf(MvOutboxReady.MV_OUTBOX_READY.NEXT_ATTEMPT_AT), false)
val IDX_NODES_ENGINE: Index = Internal.createIndex(DSL.name("idx_nodes_engine"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_ID), false)
val IDX_NODES_PROVISIONING_TIME: Index = Internal.createIndex(DSL.name("idx_nodes_provisioning_time"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.PROVISIONING, VesselEngineNodes.VESSEL_ENGINE_NODES.CREATED_AT), false)
val IDX_NODES_REGION: Index = Internal.createIndex(DSL.name("idx_nodes_region"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ENGINE_REGION_ID), false)
val IDX_NODES_TYPE_MODE: Index = Internal.createIndex(DSL.name("idx_nodes_type_mode"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.NODE_TYPE, VesselEngineNodes.VESSEL_ENGINE_NODES.DEPLOY_MODE), false)
val IDX_NODES_VESSEL: Index = Internal.createIndex(DSL.name("idx_nodes_vessel"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.VESSEL_ID), false)
val IDX_OUTBOX_AGGREGATE_TIME: Index = Internal.createIndex(DSL.name("idx_outbox_aggregate_time"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.AGGREGATE_TABLE, OutboxEvents.OUTBOX_EVENTS.AGGREGATE_ID, OutboxEvents.OUTBOX_EVENTS.CREATED_AT), false)
val IDX_OUTBOX_CHARTER_TIME: Index = Internal.createIndex(DSL.name("idx_outbox_charter_time"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.CHARTER_ID, OutboxEvents.OUTBOX_EVENTS.CREATED_AT), false)
val IDX_OUTBOX_METADATA_GIN: Index = Internal.createIndex(DSL.name("idx_outbox_metadata_gin"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.METADATA), false)
val IDX_OUTBOX_PAYLOAD_GIN: Index = Internal.createIndex(DSL.name("idx_outbox_payload_gin"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.PAYLOAD), false)
val IDX_OUTBOX_PROJECT_TIME: Index = Internal.createIndex(DSL.name("idx_outbox_project_time"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.PROJECT_ID, OutboxEvents.OUTBOX_EVENTS.CREATED_AT), false)
val IDX_OUTBOX_STATUS_NEXT: Index = Internal.createIndex(DSL.name("idx_outbox_status_next"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.STATUS, OutboxEvents.OUTBOX_EVENTS.NEXT_ATTEMPT_AT), false)
val IDX_OUTBOX_TYPE_TIME: Index = Internal.createIndex(DSL.name("idx_outbox_type_time"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.EVENT_TYPE, OutboxEvents.OUTBOX_EVENTS.CREATED_AT), false)
val IDX_OUTBOX_VESSEL_TIME: Index = Internal.createIndex(DSL.name("idx_outbox_vessel_time"), OutboxEvents.OUTBOX_EVENTS, arrayOf(OutboxEvents.OUTBOX_EVENTS.VESSEL_ID, OutboxEvents.OUTBOX_EVENTS.CREATED_AT), false)
val IDX_PROJECTS_CHARTER: Index = Internal.createIndex(DSL.name("idx_projects_charter"), CharterProjects.CHARTER_PROJECTS, arrayOf(CharterProjects.CHARTER_PROJECTS.CHARTER_ID), false)
val IDX_PROJECTS_CHARTER_DELETED: Index = Internal.createIndex(DSL.name("idx_projects_charter_deleted"), CharterProjects.CHARTER_PROJECTS, arrayOf(CharterProjects.CHARTER_PROJECTS.CHARTER_ID, CharterProjects.CHARTER_PROJECTS.DELETED_AT), false)
val IDX_PROJECTS_CHARTER_VESSEL_DELETED: Index = Internal.createIndex(DSL.name("idx_projects_charter_vessel_deleted"), CharterProjects.CHARTER_PROJECTS, arrayOf(CharterProjects.CHARTER_PROJECTS.CHARTER_ID, CharterProjects.CHARTER_PROJECTS.VESSEL_ID, CharterProjects.CHARTER_PROJECTS.DELETED_AT), false)
val IDX_REGIONS_ENGINE: Index = Internal.createIndex(DSL.name("idx_regions_engine"), VesselEngineRegions.VESSEL_ENGINE_REGIONS, arrayOf(VesselEngineRegions.VESSEL_ENGINE_REGIONS.VESSEL_ENGINE_ID), false)
val IDX_REGIONS_GEO: Index = Internal.createIndex(DSL.name("idx_regions_geo"), VesselEngineRegions.VESSEL_ENGINE_REGIONS, arrayOf(VesselEngineRegions.VESSEL_ENGINE_REGIONS.GEO_REGION), false)
val IDX_REGIONS_VESSEL: Index = Internal.createIndex(DSL.name("idx_regions_vessel"), VesselEngineRegions.VESSEL_ENGINE_REGIONS, arrayOf(VesselEngineRegions.VESSEL_ENGINE_REGIONS.VESSEL_ID), false)
val IDX_SECRETS_CHARTER: Index = Internal.createIndex(DSL.name("idx_secrets_charter"), ProjectSecrets.PROJECT_SECRETS, arrayOf(ProjectSecrets.PROJECT_SECRETS.CHARTER_ID), false)
val IDX_SECRETS_EXPIRES: Index = Internal.createIndex(DSL.name("idx_secrets_expires"), ProjectSecrets.PROJECT_SECRETS, arrayOf(ProjectSecrets.PROJECT_SECRETS.EXPIRES_AT), false)
val IDX_SECRETS_PROJECT: Index = Internal.createIndex(DSL.name("idx_secrets_project"), ProjectSecrets.PROJECT_SECRETS, arrayOf(ProjectSecrets.PROJECT_SECRETS.PROJECT_ID), false)
val IDX_SECRETS_VESSEL: Index = Internal.createIndex(DSL.name("idx_secrets_vessel"), ProjectSecrets.PROJECT_SECRETS, arrayOf(ProjectSecrets.PROJECT_SECRETS.VESSEL_ID), false)
val IDX_SIGNUPS_CREATED: Index = Internal.createIndex(DSL.name("idx_signups_created"), SignUpInquiries.SIGN_UP_INQUIRIES, arrayOf(SignUpInquiries.SIGN_UP_INQUIRIES.CREATED_AT), false)
val IDX_SIGNUPS_EXPERIENCE: Index = Internal.createIndex(DSL.name("idx_signups_experience"), SignUpInquiries.SIGN_UP_INQUIRIES, arrayOf(SignUpInquiries.SIGN_UP_INQUIRIES.TECHNICAL_EXPERIENCE), false)
val IDX_SIGNUPS_INTENT: Index = Internal.createIndex(DSL.name("idx_signups_intent"), SignUpInquiries.SIGN_UP_INQUIRIES, arrayOf(SignUpInquiries.SIGN_UP_INQUIRIES.INTENT), false)
val IDX_SIGNUPS_USER: Index = Internal.createIndex(DSL.name("idx_signups_user"), SignUpInquiries.SIGN_UP_INQUIRIES, arrayOf(SignUpInquiries.SIGN_UP_INQUIRIES.USER_ID), false)
val IDX_SIGNUPS_VESSEL: Index = Internal.createIndex(DSL.name("idx_signups_vessel"), SignUpInquiries.SIGN_UP_INQUIRIES, arrayOf(SignUpInquiries.SIGN_UP_INQUIRIES.VESSEL_ID), false)
val IDX_USER_IDENTITIES_EMAIL: Index = Internal.createIndex(DSL.name("idx_user_identities_email"), UserIdentities.USER_IDENTITIES, arrayOf(UserIdentities.USER_IDENTITIES.EMAIL), false)
val IDX_USER_IDENTITIES_EMAIL_TRGM: Index = Internal.createIndex(DSL.name("idx_user_identities_email_trgm"), UserIdentities.USER_IDENTITIES, arrayOf(UserIdentities.USER_IDENTITIES.EMAIL), false)
val IDX_USER_IDENTITIES_PROVIDER_SUBJECT: Index = Internal.createIndex(DSL.name("idx_user_identities_provider_subject"), UserIdentities.USER_IDENTITIES, arrayOf(UserIdentities.USER_IDENTITIES.PROVIDER, UserIdentities.USER_IDENTITIES.SUBJECT), false)
val IDX_USER_IDENTITIES_USER_PROVIDER: Index = Internal.createIndex(DSL.name("idx_user_identities_user_provider"), UserIdentities.USER_IDENTITIES, arrayOf(UserIdentities.USER_IDENTITIES.USER_ID, UserIdentities.USER_IDENTITIES.PROVIDER), false)
val IDX_USERS_EMAIL_TRGM: Index = Internal.createIndex(DSL.name("idx_users_email_trgm"), Users.USERS, arrayOf(Users.USERS.EMAIL), false)
val IDX_VESSELS_USER: Index = Internal.createIndex(DSL.name("idx_vessels_user"), Vessels.VESSELS, arrayOf(Vessels.VESSELS.USER_ID), false)
val IDX_WEBAUTHN_USER: Index = Internal.createIndex(DSL.name("idx_webauthn_user"), WebauthnCredentials.WEBAUTHN_CREDENTIALS, arrayOf(WebauthnCredentials.WEBAUTHN_CREDENTIALS.USER_ID), false)
val IDX_WEBHOOK_DELIVERIES_EVENT: Index = Internal.createIndex(DSL.name("idx_webhook_deliveries_event"), WebhookDeliveries.WEBHOOK_DELIVERIES, arrayOf(WebhookDeliveries.WEBHOOK_DELIVERIES.OUTBOX_EVENT_ID), false)
val IDX_WEBHOOK_DELIVERIES_STATUS_CREATED: Index = Internal.createIndex(DSL.name("idx_webhook_deliveries_status_created"), WebhookDeliveries.WEBHOOK_DELIVERIES, arrayOf(WebhookDeliveries.WEBHOOK_DELIVERIES.STATUS, WebhookDeliveries.WEBHOOK_DELIVERIES.CREATED_AT), false)
val IDX_WEBHOOK_DELIVERIES_SUB_TIME: Index = Internal.createIndex(DSL.name("idx_webhook_deliveries_sub_time"), WebhookDeliveries.WEBHOOK_DELIVERIES, arrayOf(WebhookDeliveries.WEBHOOK_DELIVERIES.SUBSCRIPTION_ID, WebhookDeliveries.WEBHOOK_DELIVERIES.CREATED_AT), false)
val IDX_WEBHOOK_DELIVERIES_SUBSCRIPTION: Index = Internal.createIndex(DSL.name("idx_webhook_deliveries_subscription"), WebhookDeliveries.WEBHOOK_DELIVERIES, arrayOf(WebhookDeliveries.WEBHOOK_DELIVERIES.SUBSCRIPTION_ID), false)
val IDX_WEBHOOK_SCOPE: Index = Internal.createIndex(DSL.name("idx_webhook_scope"), WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS, arrayOf(WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.VESSEL_ID, WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.CHARTER_ID, WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.PROJECT_ID), false)
val IDX_WEBHOOK_SUBSCRIPTIONS_ACTIVE: Index = Internal.createIndex(DSL.name("idx_webhook_subscriptions_active"), WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS, arrayOf(WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.ACTIVE), false)
val SESSIONS_EXPIRES_AT_IDX: Index = Internal.createIndex(DSL.name("sessions_expires_at_idx"), Sessions.SESSIONS, arrayOf(Sessions.SESSIONS.EXPIRES_AT), false)
val SESSIONS_REVOKED_AT_IDX: Index = Internal.createIndex(DSL.name("sessions_revoked_at_idx"), Sessions.SESSIONS, arrayOf(Sessions.SESSIONS.REVOKED_AT), false)
val SESSIONS_USER_ID_IDX: Index = Internal.createIndex(DSL.name("sessions_user_id_idx"), Sessions.SESSIONS, arrayOf(Sessions.SESSIONS.USER_ID), false)
val UQ_CHARTERS_VESSEL_NAME: Index = Internal.createIndex(DSL.name("uq_charters_vessel_name"), Charters.CHARTERS, arrayOf(Charters.CHARTERS.VESSEL_ID, Charters.CHARTERS.NAME), true)
val UQ_CONFIGS_PROJECT_KEY: Index = Internal.createIndex(DSL.name("uq_configs_project_key"), ProjectConfigs.PROJECT_CONFIGS, arrayOf(ProjectConfigs.PROJECT_CONFIGS.PROJECT_ID, ProjectConfigs.PROJECT_CONFIGS.KEY), true)
val UQ_CREW_CHARTER_MEMBER: Index = Internal.createIndex(DSL.name("uq_crew_charter_member"), CrewCharterMember.CREW_CHARTER_MEMBER, arrayOf(CrewCharterMember.CREW_CHARTER_MEMBER.CREW_ID, CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ID), true)
val UQ_CREW_USER_VESSEL: Index = Internal.createIndex(DSL.name("uq_crew_user_vessel"), Crew.CREW, arrayOf(Crew.CREW.USER_ID, Crew.CREW.VESSEL_ID), true)
val UQ_LOCKER_VESSEL_NAME: Index = Internal.createIndex(DSL.name("uq_locker_vessel_name"), Locker.LOCKER, arrayOf(Locker.LOCKER.VESSEL_ID, Locker.LOCKER.NAME), true)
val UQ_NODES_IP: Index = Internal.createIndex(DSL.name("uq_nodes_ip"), VesselEngineNodes.VESSEL_ENGINE_NODES, arrayOf(VesselEngineNodes.VESSEL_ENGINE_NODES.IP_ADDRESS), true)
val UQ_PROJECT_SLUG: Index = Internal.createIndex(DSL.name("uq_project_slug"), ProjectApplications.PROJECT_APPLICATIONS, arrayOf(ProjectApplications.PROJECT_APPLICATIONS.PROJECT_ID, ProjectApplications.PROJECT_APPLICATIONS.SLUG), true)
val UQ_PROJECTS_NAME_ENV: Index = Internal.createIndex(DSL.name("uq_projects_name_env"), CharterProjects.CHARTER_PROJECTS, arrayOf(CharterProjects.CHARTER_PROJECTS.CHARTER_ID, CharterProjects.CHARTER_PROJECTS.NAME, CharterProjects.CHARTER_PROJECTS.ENVIRONMENT), true)
val UQ_SECRETS_PROJECT_KEY: Index = Internal.createIndex(DSL.name("uq_secrets_project_key"), ProjectSecrets.PROJECT_SECRETS, arrayOf(ProjectSecrets.PROJECT_SECRETS.PROJECT_ID, ProjectSecrets.PROJECT_SECRETS.KEY), true)
val UQ_WEBHOOK_SCOPE_URL: Index = Internal.createIndex(DSL.name("uq_webhook_scope_url"), WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS, arrayOf(WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.VESSEL_ID, WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.CHARTER_ID, WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.PROJECT_ID, WebhookSubscriptions.WEBHOOK_SUBSCRIPTIONS.URL), true)
