/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.pojos

import run.galley.cloud.model.BaseModel
import java.io.Serializable
import java.time.OffsetDateTime
import java.util.UUID

/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
data class Locker(
  var id: UUID? = null,
  var vesselId: UUID? = null,
  var crewId: UUID? = null,
  var name: String? = null,
  var vaultMount: String? = null,
  var vaultPath: String? = null,
  var kvVersion: Int? = null,
  var keyId: String? = null,
  var fingerprint: String? = null,
  var createdAt: OffsetDateTime? = null,
  var updatedAt: OffsetDateTime? = null,
  var expiresAt: OffsetDateTime? = null,
) : BaseModel,
  Serializable {
  override fun equals(other: Any?): Boolean {
    if (this === other) {
      return true
    }
    if (other == null) {
      return false
    }
    if (this::class != other::class) {
      return false
    }
    val o: Locker = other as Locker
    if (this.id == null) {
      if (o.id != null) {
        return false
      }
    } else if (this.id != o.id) {
      return false
    }
    if (this.vesselId == null) {
      if (o.vesselId != null) {
        return false
      }
    } else if (this.vesselId != o.vesselId) {
      return false
    }
    if (this.crewId == null) {
      if (o.crewId != null) {
        return false
      }
    } else if (this.crewId != o.crewId) {
      return false
    }
    if (this.name == null) {
      if (o.name != null) {
        return false
      }
    } else if (this.name != o.name) {
      return false
    }
    if (this.vaultMount == null) {
      if (o.vaultMount != null) {
        return false
      }
    } else if (this.vaultMount != o.vaultMount) {
      return false
    }
    if (this.vaultPath == null) {
      if (o.vaultPath != null) {
        return false
      }
    } else if (this.vaultPath != o.vaultPath) {
      return false
    }
    if (this.kvVersion == null) {
      if (o.kvVersion != null) {
        return false
      }
    } else if (this.kvVersion != o.kvVersion) {
      return false
    }
    if (this.keyId == null) {
      if (o.keyId != null) {
        return false
      }
    } else if (this.keyId != o.keyId) {
      return false
    }
    if (this.fingerprint == null) {
      if (o.fingerprint != null) {
        return false
      }
    } else if (this.fingerprint != o.fingerprint) {
      return false
    }
    if (this.createdAt == null) {
      if (o.createdAt != null) {
        return false
      }
    } else if (this.createdAt != o.createdAt) {
      return false
    }
    if (this.updatedAt == null) {
      if (o.updatedAt != null) {
        return false
      }
    } else if (this.updatedAt != o.updatedAt) {
      return false
    }
    if (this.expiresAt == null) {
      if (o.expiresAt != null) {
        return false
      }
    } else if (this.expiresAt != o.expiresAt) {
      return false
    }
    return true
  }

  override fun hashCode(): Int {
    val prime = 31
    var result = 1
    result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
    result = prime * result + (if (this.vesselId == null) 0 else this.vesselId.hashCode())
    result = prime * result + (if (this.crewId == null) 0 else this.crewId.hashCode())
    result = prime * result + (if (this.name == null) 0 else this.name.hashCode())
    result = prime * result + (if (this.vaultMount == null) 0 else this.vaultMount.hashCode())
    result = prime * result + (if (this.vaultPath == null) 0 else this.vaultPath.hashCode())
    result = prime * result + (if (this.kvVersion == null) 0 else this.kvVersion.hashCode())
    result = prime * result + (if (this.keyId == null) 0 else this.keyId.hashCode())
    result = prime * result + (if (this.fingerprint == null) 0 else this.fingerprint.hashCode())
    result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
    result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
    result = prime * result + (if (this.expiresAt == null) 0 else this.expiresAt.hashCode())
    return result
  }

  override fun toString(): String {
    val sb = StringBuilder("Locker (")

    sb.append(id)
    sb.append(", ").append(vesselId)
    sb.append(", ").append(crewId)
    sb.append(", ").append(name)
    sb.append(", ").append(vaultMount)
    sb.append(", ").append(vaultPath)
    sb.append(", ").append(kvVersion)
    sb.append(", ").append(keyId)
    sb.append(", ").append(fingerprint)
    sb.append(", ").append(createdAt)
    sb.append(", ").append(updatedAt)
    sb.append(", ").append(expiresAt)

    sb.append(")")
    return sb.toString()
  }
}
