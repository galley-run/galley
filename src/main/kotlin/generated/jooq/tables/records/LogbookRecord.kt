/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.tables.Logbook

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class LogbookRecord() : UpdatableRecordImpl<LogbookRecord>(Logbook.LOGBOOK) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var vesselId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var charterId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var userId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var action: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var objectType: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var objectId: UUID?
        set(value): Unit = set(6, value)
        get(): UUID? = get(6) as UUID?

    open var details: JSONB?
        set(value): Unit = set(7, value)
        get(): JSONB? = get(7) as JSONB?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(8, value)
        get(): OffsetDateTime? = get(8) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised LogbookRecord
     */
    constructor(id: UUID? = null, vesselId: UUID? = null, charterId: UUID? = null, userId: UUID? = null, action: String? = null, objectType: String? = null, objectId: UUID? = null, details: JSONB? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.vesselId = vesselId
        this.charterId = charterId
        this.userId = userId
        this.action = action
        this.objectType = objectType
        this.objectId = objectId
        this.details = details
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised LogbookRecord
     */
    constructor(value: generated.jooq.tables.pojos.Logbook?): this() {
        if (value != null) {
            this.id = value.id
            this.vesselId = value.vesselId
            this.charterId = value.charterId
            this.userId = value.userId
            this.action = value.action
            this.objectType = value.objectType
            this.objectId = value.objectId
            this.details = value.details
            this.createdAt = value.createdAt
            resetTouchedOnNotNull()
        }
    }
}
