/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.daos


import generated.jooq.enums.CharterRole
import generated.jooq.tables.CrewCharterMember
import generated.jooq.tables.records.CrewCharterMemberRecord

import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class CrewCharterMemberDao(configuration: Configuration?) : DAOImpl<CrewCharterMemberRecord, generated.jooq.tables.pojos.CrewCharterMember, UUID>(CrewCharterMember.CREW_CHARTER_MEMBER, generated.jooq.tables.pojos.CrewCharterMember::class.java, configuration) {

    /**
     * Create a new CrewCharterMemberDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: generated.jooq.tables.pojos.CrewCharterMember): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): generated.jooq.tables.pojos.CrewCharterMember? = fetchOne(CrewCharterMember.CREW_CHARTER_MEMBER.ID, value)

    /**
     * Fetch records that have <code>crew_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCrewId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.CREW_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>crew_id IN (values)</code>
     */
    fun fetchByCrewId(vararg values: UUID): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.CREW_ID, *values)

    /**
     * Fetch records that have <code>charter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCharterId(lowerInclusive: UUID?, upperInclusive: UUID?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>charter_id IN (values)</code>
     */
    fun fetchByCharterId(vararg values: UUID): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ID, *values)

    /**
     * Fetch records that have <code>charter_role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCharterRole(lowerInclusive: CharterRole?, upperInclusive: CharterRole?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ROLE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>charter_role IN (values)</code>
     */
    fun fetchByCharterRole(vararg values: CharterRole): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.CHARTER_ROLE, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.CREATED_AT, *values)

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDeletedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<generated.jooq.tables.pojos.CrewCharterMember> = fetchRange(CrewCharterMember.CREW_CHARTER_MEMBER.DELETED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    fun fetchByDeletedAt(vararg values: OffsetDateTime): List<generated.jooq.tables.pojos.CrewCharterMember> = fetch(CrewCharterMember.CREW_CHARTER_MEMBER.DELETED_AT, *values)
}
