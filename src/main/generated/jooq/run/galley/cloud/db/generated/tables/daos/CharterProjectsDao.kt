/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.tables.CharterProjects
import run.galley.cloud.db.generated.tables.records.CharterProjectsRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class CharterProjectsDao(configuration: Configuration?) : DAOImpl<CharterProjectsRecord, run.galley.cloud.db.generated.tables.pojos.CharterProjects, UUID>(CharterProjects.CHARTER_PROJECTS, run.galley.cloud.db.generated.tables.pojos.CharterProjects::class.java, configuration) {

    /**
     * Create a new CharterProjectsDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.CharterProjects): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.CharterProjects? = fetchOne(CharterProjects.CHARTER_PROJECTS.ID, value)

    /**
     * Fetch records that have <code>charter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCharterId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.CHARTER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>charter_id IN (values)</code>
     */
    fun fetchByCharterId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.CHARTER_ID, *values)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.NAME, *values)

    /**
     * Fetch records that have <code>environment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfEnvironment(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.ENVIRONMENT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>environment IN (values)</code>
     */
    fun fetchByEnvironment(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.ENVIRONMENT, *values)

    /**
     * Fetch records that have <code>purpose BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPurpose(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.PURPOSE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>purpose IN (values)</code>
     */
    fun fetchByPurpose(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.PURPOSE, *values)

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDeletedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetchRange(CharterProjects.CHARTER_PROJECTS.DELETED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    fun fetchByDeletedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.CharterProjects> = fetch(CharterProjects.CHARTER_PROJECTS.DELETED_AT, *values)
}
