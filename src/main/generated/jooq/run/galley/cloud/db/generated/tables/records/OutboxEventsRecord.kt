/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import run.galley.cloud.db.generated.enums.OutboxStatus
import run.galley.cloud.db.generated.tables.OutboxEvents


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class OutboxEventsRecord() : UpdatableRecordImpl<OutboxEventsRecord>(OutboxEvents.OUTBOX_EVENTS) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var vesselId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var charterId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var projectId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var aggregateTable: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var aggregateId: UUID?
        set(value): Unit = set(5, value)
        get(): UUID? = get(5) as UUID?

    open var eventType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var eventKey: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var eventVersion: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var payload: JSONB?
        set(value): Unit = set(9, value)
        get(): JSONB? = get(9) as JSONB?

    open var metadata: JSONB?
        set(value): Unit = set(10, value)
        get(): JSONB? = get(10) as JSONB?

    open var status: OutboxStatus?
        set(value): Unit = set(11, value)
        get(): OutboxStatus? = get(11) as OutboxStatus?

    open var attempts: Int?
        set(value): Unit = set(12, value)
        get(): Int? = get(12) as Int?

    open var nextAttemptAt: OffsetDateTime?
        set(value): Unit = set(13, value)
        get(): OffsetDateTime? = get(13) as OffsetDateTime?

    open var processedAt: OffsetDateTime?
        set(value): Unit = set(14, value)
        get(): OffsetDateTime? = get(14) as OffsetDateTime?

    open var error: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(16, value)
        get(): OffsetDateTime? = get(16) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised OutboxEventsRecord
     */
    constructor(id: UUID? = null, vesselId: UUID? = null, charterId: UUID? = null, projectId: UUID? = null, aggregateTable: String? = null, aggregateId: UUID? = null, eventType: String? = null, eventKey: String? = null, eventVersion: Int? = null, payload: JSONB? = null, metadata: JSONB? = null, status: OutboxStatus? = null, attempts: Int? = null, nextAttemptAt: OffsetDateTime? = null, processedAt: OffsetDateTime? = null, error: String? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.vesselId = vesselId
        this.charterId = charterId
        this.projectId = projectId
        this.aggregateTable = aggregateTable
        this.aggregateId = aggregateId
        this.eventType = eventType
        this.eventKey = eventKey
        this.eventVersion = eventVersion
        this.payload = payload
        this.metadata = metadata
        this.status = status
        this.attempts = attempts
        this.nextAttemptAt = nextAttemptAt
        this.processedAt = processedAt
        this.error = error
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised OutboxEventsRecord
     */
    constructor(value: run.galley.cloud.db.generated.tables.pojos.OutboxEvents?): this() {
        if (value != null) {
            this.id = value.id
            this.vesselId = value.vesselId
            this.charterId = value.charterId
            this.projectId = value.projectId
            this.aggregateTable = value.aggregateTable
            this.aggregateId = value.aggregateId
            this.eventType = value.eventType
            this.eventKey = value.eventKey
            this.eventVersion = value.eventVersion
            this.payload = value.payload
            this.metadata = value.metadata
            this.status = value.status
            this.attempts = value.attempts
            this.nextAttemptAt = value.nextAttemptAt
            this.processedAt = value.processedAt
            this.error = value.error
            this.createdAt = value.createdAt
            resetTouchedOnNotNull()
        }
    }
}
