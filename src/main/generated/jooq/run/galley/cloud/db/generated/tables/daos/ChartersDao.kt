/*
 * This file is generated by jOOQ.
 */
package run.galley.cloud.db.generated.tables.daos


import java.time.OffsetDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import run.galley.cloud.db.generated.tables.Charters
import run.galley.cloud.db.generated.tables.records.ChartersRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ChartersDao(configuration: Configuration?) : DAOImpl<ChartersRecord, run.galley.cloud.db.generated.tables.pojos.Charters, UUID>(Charters.CHARTERS, run.galley.cloud.db.generated.tables.pojos.Charters::class.java, configuration) {

    /**
     * Create a new ChartersDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: run.galley.cloud.db.generated.tables.pojos.Charters): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): run.galley.cloud.db.generated.tables.pojos.Charters? = fetchOne(Charters.CHARTERS.ID, value)

    /**
     * Fetch records that have <code>vessel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVesselId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.VESSEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vessel_id IN (values)</code>
     */
    fun fetchByVesselId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.VESSEL_ID, *values)

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUserId(lowerInclusive: UUID?, upperInclusive: UUID?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.USER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    fun fetchByUserId(vararg values: UUID): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.USER_ID, *values)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.NAME, *values)

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDescription(lowerInclusive: String?, upperInclusive: String?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    fun fetchByDescription(vararg values: String): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.DESCRIPTION, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.CREATED_AT, *values)

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDeletedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetchRange(Charters.CHARTERS.DELETED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    fun fetchByDeletedAt(vararg values: OffsetDateTime): List<run.galley.cloud.db.generated.tables.pojos.Charters> = fetch(Charters.CHARTERS.DELETED_AT, *values)
}
